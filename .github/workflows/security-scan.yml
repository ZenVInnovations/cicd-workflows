name: Security Vulnerability Scanning

on:
  workflow_call:
    inputs:
      image_name:
        description: 'Docker image name to scan'
        required: true
        type: string
      image_tag:
        description: 'Docker image tag to scan'
        required: true
        type: string
      fail_on_severity:
        description: 'Fail build on these severities'
        required: false
        type: string
        default: 'HIGH,CRITICAL'
      upload_sarif:
        description: 'Upload SARIF results to GitHub Security'
        required: false
        type: boolean
        default: true
    secrets:
      CONTAINER_REGISTRY_TOKEN:
        required: true

jobs:
  security-scan:
    runs-on: [self-hosted, linux, x64, zenvinnovations]
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: srimanreddy99
          password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}

      - name: Pull Docker Image
        run: |
          echo "📥 Pulling image for security scan"
          IMAGE="ghcr.io/zenvinnovations/${{ inputs.image_name }}:${{ inputs.image_tag }}"
          echo "Image: $IMAGE"

          # Add retry logic in case of timing issues
          for i in {1..3}; do
            if docker pull "$IMAGE"; then
              echo "✅ Successfully pulled image on attempt $i"
              break
            else
              echo "⚠️ Pull attempt $i failed, retrying in 10 seconds..."
              if [ $i -eq 3 ]; then
                echo "❌ All pull attempts failed"
                echo "🔍 Checking if image exists..."
                docker manifest inspect "$IMAGE" || echo "Image manifest not found"
                exit 1
              fi
              sleep 10
            fi
          done

      - name: Run Trivy Vulnerability Scanner (SARIF)
        uses: aquasecurity/trivy-action@master
        if: inputs.upload_sarif
        with:
          image-ref: 'ghcr.io/zenvinnovations/${{ inputs.image_name }}:${{ inputs.image_tag }}'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy Scan Results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: inputs.upload_sarif && (success() || failure())
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run Trivy Vulnerability Scanner (Table Format)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/zenvinnovations/${{ inputs.image_name }}:${{ inputs.image_tag }}'
          format: 'table'
          output: 'trivy-report.txt'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
          exit-code: '0'  # Don't fail here, we'll handle it below

      - name: Run Trivy for Critical/High Issues Only
        id: trivy_check
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: 'ghcr.io/zenvinnovations/${{ inputs.image_name }}:${{ inputs.image_tag }}'
          format: 'table'
          severity: ${{ inputs.fail_on_severity }}
          exit-code: '1'

      - name: Process Scan Results
        run: |
          echo "📊 Processing security scan results"

          # Check if report file exists
          if [[ -f "trivy-report.txt" ]]; then
            echo "✅ Trivy scan completed"

            # Count vulnerabilities by severity
            CRITICAL_COUNT=$(grep -c "CRITICAL" trivy-report.txt || echo "0")
            HIGH_COUNT=$(grep -c "HIGH" trivy-report.txt || echo "0")
            MEDIUM_COUNT=$(grep -c "MEDIUM" trivy-report.txt || echo "0")
            LOW_COUNT=$(grep -c "LOW" trivy-report.txt || echo "0")

            echo "🔍 Vulnerability Summary:"
            echo "  - Critical: $CRITICAL_COUNT"
            echo "  - High: $HIGH_COUNT"
            echo "  - Medium: $MEDIUM_COUNT"
            echo "  - Low: $LOW_COUNT"

            # Export for next steps
            echo "CRITICAL_COUNT=$CRITICAL_COUNT" >> $GITHUB_ENV
            echo "HIGH_COUNT=$HIGH_COUNT" >> $GITHUB_ENV
            echo "MEDIUM_COUNT=$MEDIUM_COUNT" >> $GITHUB_ENV
            echo "LOW_COUNT=$LOW_COUNT" >> $GITHUB_ENV
          else
            echo "⚠️ Trivy report not found"
            exit 1
          fi

      - name: Comment PR with Security Scan Results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');

            let reportContent = '';
            try {
              reportContent = fs.readFileSync('trivy-report.txt', 'utf8');
            } catch (error) {
              reportContent = 'No scan report available';
            }

            const critical = process.env.CRITICAL_COUNT || '0';
            const high = process.env.HIGH_COUNT || '0';
            const medium = process.env.MEDIUM_COUNT || '0';
            const low = process.env.LOW_COUNT || '0';

            const severityEmoji = (count) => count === '0' ? '✅' : '⚠️';

            const comment = `## 🔒 Security Scan Results

            **Image**: \`${{ inputs.image_name }}:${{ inputs.image_tag }}\`

            ### 📊 Vulnerability Summary
            | Severity | Count | Status |
            |----------|-------|---------|
            | Critical | ${critical} | ${severityEmoji(critical)} |
            | High     | ${high}     | ${severityEmoji(high)} |
            | Medium   | ${medium}   | ${severityEmoji(medium)} |
            | Low      | ${low}      | ${severityEmoji(low)} |

            ### 🚨 Security Status
            ${(critical > 0 || high > 0) ?
              '⚠️ **Action Required**: Critical or High severity vulnerabilities detected!' :
              '✅ **Looks Good**: No critical or high severity vulnerabilities found.'
            }

            <details>
            <summary>📋 Detailed Scan Report</summary>

            \`\`\`
            ${reportContent.length > 3000 ? reportContent.substring(0, 3000) + '...\n\n[Report truncated - check the full scan in the workflow logs]' : reportContent}
            \`\`\`

            </details>

            ---
            🔍 *Scanned by Trivy | View full results in the [workflow run](${context.payload.pull_request.html_url.replace('/pull/', '/actions/runs/')}).*
            `;

            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Could not post comment:', error.message);
            }

      - name: Create Security Summary
        run: |
          echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image Scanned**: \`ghcr.io/zenvinnovations/${{ inputs.image_name }}:${{ inputs.image_tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Severity | Count |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🔴 Critical | $CRITICAL_COUNT |" >> $GITHUB_STEP_SUMMARY
          echo "| 🟠 High | $HIGH_COUNT |" >> $GITHUB_STEP_SUMMARY
          echo "| 🟡 Medium | $MEDIUM_COUNT |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔵 Low | $LOW_COUNT |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "$CRITICAL_COUNT" -gt 0 || "$HIGH_COUNT" -gt 0 ]]; then
            echo "### ⚠️ Security Concerns Detected" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "This image contains **$CRITICAL_COUNT Critical** and **$HIGH_COUNT High** severity vulnerabilities." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Recommended Actions:**" >> $GITHUB_STEP_SUMMARY
            echo "- Update base images to latest versions" >> $GITHUB_STEP_SUMMARY
            echo "- Update application dependencies" >> $GITHUB_STEP_SUMMARY
            echo "- Review the detailed scan report above" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ✅ Security Scan Passed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "No critical or high severity vulnerabilities detected." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Check Security Gate
        run: |
          echo "🚪 Checking security gate"

          if [[ "${{ steps.trivy_check.outcome }}" == "failure" ]]; then
            echo "❌ Security gate failed: Critical or High severity vulnerabilities found"
            echo "This deployment will be blocked until vulnerabilities are resolved."

            echo ""
            echo "🔧 Remediation steps:"
            echo "1. Update base Docker images"
            echo "2. Update application dependencies"
            echo "3. Re-run the security scan"
            echo "4. Review the detailed report above"

            exit 1
          else
            echo "✅ Security gate passed"
            echo "No blocking vulnerabilities found - deployment can proceed"
          fi

      - name: Upload Scan Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-scan-report-${{ inputs.image_tag }}
          path: |
            trivy-report.txt
            trivy-results.sarif
          retention-days: 30